import { type NextPage } from "next";
import Head from "next/head";
import { api } from "~/utils/api";
import { type Picture } from "@prisma/client";

const Random: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: "potato pasta" });
  const contents = api.form.getAll.useQuery();
  return (
    <>
      <Head>
        <title>Photos üòÄ</title>
        <meta name="description" content="Generated by create-t3-app. coolio!" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-4 rounded-xl bg-slate-200/50">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem] bg-slate-300 rounded-xl px-4 py-2 self-start">
            Pictures üêùüï≥
          </h1>

          {
            contents.data ? contents.data.map((data, idx) => Row({ data, isEven: idx % 2 ? true : false })) : 'waiting...'
          }

          <p className="text-2xl text-white">
            {hello.data ? hello.data.greeting : "Loading tRPC query..."}
          </p>
        </div>
      </main>
    </>
  );
};

type RowProps = {
  data: Picture,
  isEven: boolean
};

function Row (props: RowProps) {
  return (
    <div id={props.data.id} className="flex flex-row text-center w-full {props.isEven ? 'bg-amber-100' : 'bg-lime-100' }">
      <div className="w-1/5">{props.data.title}</div>
      <div className="w-1/5">{props.data.thumbnailPath}</div>
      <div className="w-1/5">{props.data.fullSizePath}</div>
      <div className="w-1/5">{props.data.location}</div>
      <div className="w-1/5">{props.data.createdAt.toISOString()}</div>
    </div>
  )
}

export default Random;
